/* An adaptation of the "sidebar" magic found on
	https://github.com/lanyonm/lanyonm.github.io/
 */

$content-wrapper: 'div#bodywrapper' !default;
$sidebar-wrapper: 'div.navigation.sidebar' !default;
$sidebar-activator: 'input#nav-checkbox' !default;
$sidebar-control: 'label[for="nav-checkbox"]' !default;

$sidebar-width: 18rem !default;
$sidebar-font-size: (0.9rem) !default;
$sidebar-font-family: "Arial" !default;
$sidebar-background: black !default;
$sidebar-font-color: rgba(255,255,255,0.6) !default;

$sidebar-link-color: #FFFFFF !default;
$sidebar-trace-color: rgba(255,255,255,.1) !default;

$float-cutoff-height: 40em !default;

$activator-color: #505050 !default;
$activator-background: #fff !default;
$activator-border-mobile: transparentize($activator-color, 0.25);

$navcolumn-width: 30em !default;

#{$content-wrapper} {
	position: relative;
	// width: 100%;

}


/*
#{$sidebar-wrapper} .social-icons a {
  color: rgba(255, 255, 255, 0.6);
  padding-right: 0.75em;
}

#{$sidebar-wrapper} .social-icons a:hover {
  text-decoration: none;
}
*/

/*
 * Sidebar
 *
 * The sidebar is the drawer, the item we are toggling with our handy hamburger
 * button in the corner of the page.
 *
 * (Derived from similar at https://github.com/lanyonm/lanyonm.github.io)
 *
 * This particular sidebar implementation was inspired by Chris Coyier's
 * "Offcanvas Menu with CSS Target" article, and the checkbox variation from the
 * comments by a reader. It modifies both implementations to continue using the
 * checkbox (no change in URL means no polluted browser history), but this uses
 * `position` for the menu to avoid some potential content reflow issues.
 *
 * Source: http://css-tricks.com/off-canvas-menu-with-css-target/#comment-207504
 */

/* Style and "hide" the sidebar */
#{$sidebar-wrapper} {
  position: fixed;
  top: 0;
  bottom: 0;
  left: (-1 * $sidebar-width);
  width: $sidebar-width;
  visibility: hidden;
  overflow-y: auto;
  font-family: $sidebar-font-family;
  font-size: $sidebar-font-size;
  color: $sidebar-font-color;
  background-color: $sidebar-background;
  -webkit-transition: all .3s ease-in-out;
          transition: all .3s ease-in-out;



  @media (min-width: $navcolumn-width) {
    font-size: .75rem; /* 14px */
  }

  @media print {
    display: none !important;
  }

}



/* Sidebar content */
#{$sidebar-wrapper} a {
  font-weight: normal;
  color: $sidebar-link-color;
  text-decoration: none;
}

#{$sidebar-wrapper} section {
	letter-spacing: calc(0.08em);
  position: relative;


	& > em, a, p {
    font-size: $sidebar-font-size;

    &:not(.naturalcase) {
      text-transform: uppercase;
    }
	}

  @include small {
    p {
      padding: 1.5rem;
    }
  }


	& > em {
    padding: 1rem;
    margin-top: 0.75rem;
    display: inline-block;
	}

	p {
		padding: 1rem;
		&:last-child {
			margin-bottom: 0;
		}
  }
  
  &.bottom {
    // Apply default cutoff
    @media screen and (min-height: $float-cutoff-height){
      // position: absolute;
      bottom: 0;
    }

  }

  &.copyright {
    margin: 1rem;
  }
}




/* Sidebar nav */
#{$sidebar-wrapper} nav {
  //border-bottom: 1px solid $sidebar-trace-color;

  ul {

    margin-top: 0;
    margin-bottom: 0;
    margin-left: 0;
    padding-left: 0;

  	li {
  		list-style-type: none;
  	}

  	a {
  		display: block;
  		padding: .5rem 1rem;
  		border-top: 1px solid $sidebar-trace-color;

      @include small {
        padding-left:  1.5rem;
        padding-right: 1.5rem;
      }

  		&.active,
  		&:hover,
  		&:focus {
  			text-decoration: none;
  			background-color: $sidebar-trace-color;
  			border-color: transparent;
  		}

  	}

  }

}




/* Hide the sidebar checkbox that we toggle with `#{$sidebar-control}` */
#{$sidebar-activator} {
  display: none;

  @media print {
    display: none !important;
  }
}

/* Style the `label` that we use to target the `#{$sidebar-activator}` */
#{$sidebar-control} {
  z-index: 1000;
  position: fixed;
  top:  0.8rem;
  left: 0.8rem;
  display: block;
  font-size: 1.125rem;
  padding: 0 .65rem;
  color: $activator-color;
  background-color: $activator-background;
  border-radius: 4px;
  cursor: pointer;

  @media print {
    display: none !important;
  }

  @include small {
    border: 0.125rem $activator-border-mobile solid;
  }

  @media (min-width: $navcolumn-width) {
      // position: fixed;
      // width: 2.25rem;
  }

  & {  // Visual improvement
  	padding: 0.5rem .65rem;
  	text-align: center;
  }

}

#{$sidebar-control}:active,
#{$sidebar-activator}:checked ~ #{$sidebar-control} {
  color: $activator-background;
  background-color: $activator-color;
}




/* Slide effect
 *
 * Handle the sliding effects of the sidebar and content in one spot, seperate
 * from the default styles.
 *
 * As an a heads up, we don't use `transform: translate3d()` here because when
 * mixed with `position: fixed;` for the sidebar toggle, it creates a new
 * containing block. Put simply, the fixed sidebar toggle behaves like
 * `position: absolute;` when transformed.
 *
 * Read more about it at http://meyerweb.com/eric/thoughts/2011/09/12/.
 */

#{$content-wrapper},
#{$sidebar-wrapper},
#{$sidebar-control} {
  -webkit-backface-visibility: hidden;
      -ms-backface-visibility: hidden;
          backface-visibility: hidden;
}
#{$content-wrapper},
#{$sidebar-control} {
  -webkit-transition: -webkit-transform .3s ease-in-out;
          transition: transform .3s ease-in-out;
}

#{$sidebar-activator}:checked ~ #{$sidebar-wrapper} {
  z-index: 10;
  visibility: visible;
}
#{$sidebar-activator}:checked ~ #{$sidebar-wrapper},
#{$sidebar-activator}:checked ~ #{$content-wrapper},
#{$sidebar-activator}:checked ~ #{$sidebar-control} {
  -webkit-transform: translateX($sidebar-width);
      -ms-transform: translateX($sidebar-width);
          transform: translateX($sidebar-width);
}





/*
 * Reverse layout
 *
 * Flip the orientation of the page by placing the `.sidebar` and sidebar toggle
 * on the right side.
 */

&.layout-reverse #{$sidebar-wrapper} {
  left: auto;
  right: (-1 * $sidebar-width);
}
&.layout-reverse #{$sidebar-control} {
  left: auto;
  right: 1rem;
}

&.layout-reverse #{$sidebar-activator}:checked ~ #{$sidebar-wrapper},
&.layout-reverse #{$sidebar-activator}:checked ~ #{$content-wrapper},
&.layout-reverse #{$sidebar-activator}:checked ~ #{$sidebar-control} {
  -webkit-transform: translateX((-1 * $sidebar-width));
      -ms-transform: translateX((-1 * $sidebar-width));
          transform: translateX((-1 * $sidebar-width));
}



/*
 * Overlay sidebar
 *
 * Make the sidebar content overlay the viewport content instead of pushing it
 * aside when toggled.
 */

&.sidebar-overlay #{$sidebar-activator}:checked ~ #{$content-wrapper} {
  -webkit-transform: translateX(0);
      -ms-transform: translateX(0);
          transform: translateX(0);
}
&.sidebar-overlay #{$sidebar-activator}:checked ~ #{$sidebar-control} {
  box-shadow: 0 0 0 .25rem #fff;
}
&.sidebar-overlay #{$sidebar-activator}:checked ~ #{$sidebar-wrapper} {
  box-shadow: .25rem 0 .5rem rgba(0,0,0,.1);
}

/* Only one tweak for a reverse layout */
&.layout-reverse.sidebar-overlay #{$sidebar-activator}:checked ~ #{$sidebar-wrapper} {
  box-shadow: -.25rem 0 .5rem rgba(0,0,0,.1);
}
